<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.layout.VBox?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.text.Font?>
<?import javafx.scene.layout.ColumnConstraints?>
<?import javafx.scene.layout.RowConstraints?>

<!-- Layout 2 : HBox Layout -->
<?import javafx.scene.layout.HBox?>
<!--Use in dialog situation, add HBox as child of another layout (VBox)-->
<!--
<HBox fx:controller="com.javafxproject.HelloController"
      xmlns:fx="http://javafx.com/fxml"
      alignment="BOTTOM_RIGHT"
      style="-fx-border-color: red; -fx-border-width: 3; -fx-border-style: dashed"
      spacing="10">

    <padding>
        <Insets bottom="10" right="10"/>
    </padding>

    <Button text="Button 1" prefWidth="90"/>
    <Button text="Button 2" prefWidth="90"/>
    <Button text="Button 3"/>

</HBox>
-->


<!-- Layout 3 : BorderPane Layout -->
<?import javafx.scene.layout.BorderPane?>

<!--<BorderPane fx:controller="com.javafxproject.HelloController"-->
<!--            xmlns:fx="http://javafx.com/fxml">-->

<!-- Tell the borderPane layout to bottom-->
<!--  Each position only have 1 child  -->
<!--
    <padding>
        <Insets bottom="32" top="32" left="32" right="32"/>
    </padding>
    <bottom>

        <HBox spacing="10" alignment="BOTTOM_CENTER">

            <padding>
                <Insets bottom="32"/>
            </padding>

            <Button text="Button 1" prefWidth="90"/>
            <Button text="Button 2" prefWidth="90"/>
            <Button text="Button 3" prefWidth="90"/>

        </HBox>

    </bottom>

    <top>
        <Label text="TOP"
               textFill="red"
               alignment="TOP_CENTER"
               BorderPane.alignment="TOP_CENTER">

            <font>
                <Font name="SF Compact Display BOLD" size="24"/>
            </font>
        </Label>
    </top>

    <left>
        <Label text="LEFT"
               textFill="red"
               BorderPane.alignment="TOP_CENTER">

            <font>
                <Font name="SF Compact Display BOLD" size="32"/>
            </font>
        </Label>
    </left>

    <right>
        <Label text="RIGHT"
               textFill="red"
               BorderPane.alignment="TOP_CENTER">

            <font>
                <Font name="SF Compact Display BOLD" size="24"/>
            </font>
        </Label>
    </right>

    <center>
        <Label text="CENTER"
               textFill="red"
               BorderPane.alignment="CENTER">

            <font>
                <Font name="SF Compact Display BOLD" size="24"/>
            </font>
        </Label>
    </center>

</BorderPane>
-->


<!-- Layout 4 : FlowPane Layout -->
<!-- Automatically Responsive when user decrease the stage window, from horizontal to vertical -->
<?import javafx.scene.layout.FlowPane?>
<!--
<FlowPane fx:controller="com.javafxproject.HelloController"
          xmlns:fx="http://javafx.com/fxml"
          orientation="HORIZONTAL"
          hgap="16"
          vgap="16"
          alignment="CENTER">

    <Button text="Button 1" prefWidth="90"/>
    <Button text="Button 2" prefWidth="90"/>
    <Button text="Button 3" prefWidth="90"/>
    <Button text="Button 4" prefWidth="90"/>
    <Button text="Button 5" prefWidth="90"/>
    <Button text="Button 6" prefWidth="90"/>
    <Button text="Button 7" prefWidth="90"/>
    <Button text="Button 8" prefWidth="90"/>
    <Button text="Button 9" prefWidth="90"/>
    <Button text="Button 10" prefWidth="90"/>

</FlowPane>
-->


<!-- Layout 5 : VBox Layout -->
<!-- Not Responsive like FlowPane -->
<!-- Use VBox or HBox if you have exact element -->
<!--
<VBox fx:controller="com.javafxproject.HelloController"
      xmlns:fx="http://javafx.com/fxml">

    <Button text="Button 1" prefWidth="90"/>
    <Button text="Button 2" prefWidth="90"/>
    <Button text="Button 3" prefWidth="90"/>
    <Button text="Button 4" prefWidth="90"/>
    <Button text="Button 5" prefWidth="90"/>
    <Button text="Button 6" prefWidth="90"/>
    <Button text="Button 7" prefWidth="90"/>
    <Button text="Button 8" prefWidth="90"/>
    <Button text="Button 9" prefWidth="90"/>
    <Button text="Button 10" prefWidth="90"/>

</VBox>
-->


<!-- Layout 6 : TilePane Layout -->
<!-- Combine GridPane and FlowPane-->
<!--
<?import javafx.scene.layout.TilePane?>
<TilePane fx:controller="com.javafxproject.HelloController"
          xmlns:fx="http://javafx.com/fxml"
          hgap="24"
          vgap="24">

    <Button text="Button 1" prefWidth="90"/>
    <Button text="Button 2" prefWidth="90"/>
    <Button text="Button 3" prefWidth="90"/>
    <Button text="Button 4" prefWidth="90"/>
    <Button text="Button 5" prefWidth="90"/>
    <Button text="Button 6" prefWidth="90"/>
    <Button text="Button 7" prefWidth="90"/>
    <Button text="Button 8" prefWidth="90"/>
    <Button text="Button 9" prefWidth="90"/>
    <Button text="Button 10" prefWidth="90"/>

</TilePane>
-->


<!-- Layout 7 : Stack Layout -->
<!-- Adding Child to Stack -->
<!-- Last child will be First on stack-->
<!--
<?import javafx.scene.layout.StackPane?>
<StackPane fx:controller="com.javafxproject.HelloController"
           xmlns:fx="http://javafx.com/fxml">

    <Label text="Label Text" />
    <Button text="Button 1" prefWidth="90" style="-fx-background-color: red"/>
    <Label text="Label Text" />

</StackPane>
-->


<!-- Layout 8 : Controller -->
<!--Button, Label, and many more-->
<GridPane fx:controller="com.javafxproject.HelloController"
          xmlns:fx="http://javafx.com/fxml"
          alignment="TOP_CENTER" hgap="16" vgap="24"
          gridLinesVisible="true">
    <Button GridPane.columnIndex="0" GridPane.rowIndex="0" text="Hello" font=""/>
</GridPane>
































